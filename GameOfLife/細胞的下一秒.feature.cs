// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by SpecFlow (http://www.specflow.org/).
//      SpecFlow Version:2.1.0.0
//      SpecFlow Generator Version:2.0.0.0
// 
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------
#region Designer generated code
#pragma warning disable
namespace GameOfLife
{
    using TechTalk.SpecFlow;
    
    
    [System.CodeDom.Compiler.GeneratedCodeAttribute("TechTalk.SpecFlow", "2.1.0.0")]
    [System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    [Microsoft.VisualStudio.TestTools.UnitTesting.TestClassAttribute()]
    public partial class 細胞的下一秒Feature
    {
        
        private static TechTalk.SpecFlow.ITestRunner testRunner;
        
#line 1 "細胞的下一秒.feature"
#line hidden
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassInitializeAttribute()]
        public static void FeatureSetup(Microsoft.VisualStudio.TestTools.UnitTesting.TestContext testContext)
        {
            testRunner = TechTalk.SpecFlow.TestRunnerManager.GetTestRunner(null, 0);
            TechTalk.SpecFlow.FeatureInfo featureInfo = new TechTalk.SpecFlow.FeatureInfo(new System.Globalization.CultureInfo("en-US"), "細胞的下一秒", @"https://zh.wikipedia.org/wiki/%E5%BA%B7%E5%A8%81%E7%94%9F%E5%91%BD%E6%B8%B8%E6%88%8F
1.當前細胞為存活狀態時，當周圍低於2個（不包含2個）存活細胞時， 該細胞變成死亡狀態。（模擬生命數量稀少）
2.當前細胞為存活狀態時，當周圍有2個或3個存活細胞時， 該細胞保持原樣。
3.當前細胞為存活狀態時，當周圍有3個以上的存活細胞時，該細胞變成死亡狀態。（模擬生命數量過多）
4.當前細胞為死亡狀態時，當周圍有3個存活細胞時，該細胞變成存活狀態。 （模擬繁殖）

有一個世界(範圍)，丟進一些細胞，看他下一秒發生甚麼事情

//一開始  =>  下一秒
//   X
//   0123       0123
//Y0 0110       0010
// 1 0001       0010
// 2 0000       0000

//一開始  =>  下一秒
//   X
//   0123       0123
//Y0 0110       0010
// 1 0001       0010
// 2 0000       0000
// 3 1000       0000", ProgrammingLanguage.CSharp, ((string[])(null)));
            testRunner.OnFeatureStart(featureInfo);
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.ClassCleanupAttribute()]
        public static void FeatureTearDown()
        {
            testRunner.OnFeatureEnd();
            testRunner = null;
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestInitializeAttribute()]
        public virtual void TestInitialize()
        {
            if (((testRunner.FeatureContext != null) 
                        && (testRunner.FeatureContext.FeatureInfo.Title != "細胞的下一秒")))
            {
                GameOfLife.細胞的下一秒Feature.FeatureSetup(null);
            }
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestCleanupAttribute()]
        public virtual void ScenarioTearDown()
        {
            testRunner.OnScenarioEnd();
        }
        
        public virtual void ScenarioSetup(TechTalk.SpecFlow.ScenarioInfo scenarioInfo)
        {
            testRunner.OnScenarioStart(scenarioInfo);
        }
        
        public virtual void ScenarioCleanup()
        {
            testRunner.CollectScenarioErrors();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("丟三個細胞進去")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "細胞的下一秒")]
        public virtual void 丟三個細胞進去()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("丟三個細胞進去", ((string[])(null)));
#line 26
this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table1 = new TechTalk.SpecFlow.Table(new string[] {
                        "X",
                        "Y",
                        "isAlive"});
            table1.AddRow(new string[] {
                        "0",
                        "0",
                        "false"});
            table1.AddRow(new string[] {
                        "1",
                        "0",
                        "true"});
            table1.AddRow(new string[] {
                        "2",
                        "0",
                        "true"});
            table1.AddRow(new string[] {
                        "3",
                        "0",
                        "false"});
            table1.AddRow(new string[] {
                        "0",
                        "1",
                        "false"});
            table1.AddRow(new string[] {
                        "1",
                        "1",
                        "false"});
            table1.AddRow(new string[] {
                        "2",
                        "1",
                        "false"});
            table1.AddRow(new string[] {
                        "3",
                        "1",
                        "true"});
            table1.AddRow(new string[] {
                        "0",
                        "2",
                        "false"});
            table1.AddRow(new string[] {
                        "1",
                        "2",
                        "false"});
            table1.AddRow(new string[] {
                        "2",
                        "2",
                        "false"});
            table1.AddRow(new string[] {
                        "3",
                        "2",
                        "false"});
#line 27
testRunner.When("丟進一堆細胞，下一秒", ((string)(null)), table1, "When ");
#line hidden
            TechTalk.SpecFlow.Table table2 = new TechTalk.SpecFlow.Table(new string[] {
                        "X",
                        "Y",
                        "isAlive"});
            table2.AddRow(new string[] {
                        "0",
                        "0",
                        "false"});
            table2.AddRow(new string[] {
                        "1",
                        "0",
                        "false"});
            table2.AddRow(new string[] {
                        "2",
                        "0",
                        "true"});
            table2.AddRow(new string[] {
                        "3",
                        "0",
                        "false"});
            table2.AddRow(new string[] {
                        "0",
                        "1",
                        "false"});
            table2.AddRow(new string[] {
                        "1",
                        "1",
                        "false"});
            table2.AddRow(new string[] {
                        "2",
                        "1",
                        "true"});
            table2.AddRow(new string[] {
                        "3",
                        "1",
                        "false"});
            table2.AddRow(new string[] {
                        "0",
                        "2",
                        "false"});
            table2.AddRow(new string[] {
                        "1",
                        "2",
                        "false"});
            table2.AddRow(new string[] {
                        "2",
                        "2",
                        "false"});
            table2.AddRow(new string[] {
                        "3",
                        "2",
                        "false"});
#line 41
testRunner.Then("剩下的細胞", ((string)(null)), table2, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
        
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestMethodAttribute()]
        [Microsoft.VisualStudio.TestTools.UnitTesting.DescriptionAttribute("丟四個細胞進去")]
        [Microsoft.VisualStudio.TestTools.UnitTesting.TestPropertyAttribute("FeatureTitle", "細胞的下一秒")]
        public virtual void 丟四個細胞進去()
        {
            TechTalk.SpecFlow.ScenarioInfo scenarioInfo = new TechTalk.SpecFlow.ScenarioInfo("丟四個細胞進去", ((string[])(null)));
#line 57
 this.ScenarioSetup(scenarioInfo);
#line hidden
            TechTalk.SpecFlow.Table table3 = new TechTalk.SpecFlow.Table(new string[] {
                        "X",
                        "Y",
                        "isAlive"});
            table3.AddRow(new string[] {
                        "0",
                        "0",
                        "false"});
            table3.AddRow(new string[] {
                        "1",
                        "0",
                        "true"});
            table3.AddRow(new string[] {
                        "2",
                        "0",
                        "true"});
            table3.AddRow(new string[] {
                        "3",
                        "0",
                        "false"});
            table3.AddRow(new string[] {
                        "0",
                        "1",
                        "false"});
            table3.AddRow(new string[] {
                        "1",
                        "1",
                        "false"});
            table3.AddRow(new string[] {
                        "2",
                        "1",
                        "false"});
            table3.AddRow(new string[] {
                        "3",
                        "1",
                        "true"});
            table3.AddRow(new string[] {
                        "0",
                        "2",
                        "false"});
            table3.AddRow(new string[] {
                        "1",
                        "2",
                        "false"});
            table3.AddRow(new string[] {
                        "2",
                        "2",
                        "false"});
            table3.AddRow(new string[] {
                        "3",
                        "2",
                        "false"});
            table3.AddRow(new string[] {
                        "0",
                        "3",
                        "true"});
            table3.AddRow(new string[] {
                        "1",
                        "3",
                        "false"});
            table3.AddRow(new string[] {
                        "2",
                        "3",
                        "false"});
            table3.AddRow(new string[] {
                        "3",
                        "3",
                        "false"});
#line 58
 testRunner.When("丟進一堆細胞，下一秒", ((string)(null)), table3, "When ");
#line hidden
            TechTalk.SpecFlow.Table table4 = new TechTalk.SpecFlow.Table(new string[] {
                        "X",
                        "Y",
                        "isAlive"});
            table4.AddRow(new string[] {
                        "0",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "1",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "2",
                        "0",
                        "true"});
            table4.AddRow(new string[] {
                        "3",
                        "0",
                        "false"});
            table4.AddRow(new string[] {
                        "0",
                        "1",
                        "false"});
            table4.AddRow(new string[] {
                        "1",
                        "1",
                        "false"});
            table4.AddRow(new string[] {
                        "2",
                        "1",
                        "true"});
            table4.AddRow(new string[] {
                        "3",
                        "1",
                        "false"});
            table4.AddRow(new string[] {
                        "0",
                        "2",
                        "false"});
            table4.AddRow(new string[] {
                        "1",
                        "2",
                        "false"});
            table4.AddRow(new string[] {
                        "2",
                        "2",
                        "false"});
            table4.AddRow(new string[] {
                        "3",
                        "2",
                        "false"});
            table4.AddRow(new string[] {
                        "0",
                        "3",
                        "false"});
            table4.AddRow(new string[] {
                        "1",
                        "3",
                        "false"});
            table4.AddRow(new string[] {
                        "2",
                        "3",
                        "false"});
            table4.AddRow(new string[] {
                        "3",
                        "3",
                        "false"});
#line 76
testRunner.Then("剩下的細胞", ((string)(null)), table4, "Then ");
#line hidden
            this.ScenarioCleanup();
        }
    }
}
#pragma warning restore
#endregion
